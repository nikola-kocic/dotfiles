#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
alias ll='ls --color=auto -la --full-time'


PS1='[\u@\h \w]\$ '

stty -ixon  # Disable Ctrl+S freezing, use it for forward history search

# append to the history file, don't overwrite it
shopt -s histappend
HISTFILE=~/.bash_history
HISTCONTROL=erasedups
HISTSIZE=200000
HISTFILESIZE=2000000
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND; }history -a"
alias u="history -n"

# Set urgent hint on promt
PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND; }echo -ne '\a'"

export GIT_EDITOR="vim"
export EDITOR='vim'
export VISUAL='vim'
export MAKEFLAGS=-j4
export PYTHONDONTWRITEBYTECODE=1 # disable creation of pyc files
export LESS="--RAW-CONTROL-CHARS --ignore-case --jump-target=4"
export PATH="${HOME}/fs/bin:${PATH}"

iploc () { curl -s http://ip-api.com/json/"$1"|tr , '\n'|sed 's/[\"{}]//g'; }

alias grep="/usr/bin/grep --color=auto"
alias gl='git log --pretty=oneline --graph --decorate --color'
alias lsd='ls -lahrt --time-style=full-iso'
alias rmpyc="find . -name '*.pyc' -delete"
alias vcp="rsync -ah --progress"
alias srlayout="setxkbmap -option grp:lalt_lshift_toggle -layout usrsl,rs -variant ,yz"
alias tvim="gvim --servername `gvim --serverlist | head -1` --remote-tab"

alias sync-project-server='git --git-dir /mnt/project/.git ls-files -z src/ | rsync -vz --exclude config.json --files-from=- --from0 /mnt/project/ project-server:~/project/'

mount_tc() {
    local FILEPATH="${1}"
    local DESTINATION="${2}"
    local CONTAINER_NAME="$(basename "${FILEPATH}")"
    sudo sh -c "cryptsetup --type tcrypt open "${FILEPATH}" "${CONTAINER_NAME}" && mount -o fmask=0177,dmask=0077,uid="$(id --user $(whoami))"  "/dev/mapper/${CONTAINER_NAME}" "${DESTINATION}""
}

alias tcmount="mount_tc /mnt/data/project /mnt/common"

alias project='PROJECT_NAME="project" && \
        PROJECTPATH="/mnt/${PROJECT_NAME}" && \
        export PYTHONPATH="${PROJECTPATH}:${PYTHONPATH}" && \
        source ~/dev/virtualenvs/${PROJECT_NAME}/bin/activate && \
        cd "${PROJECTPATH}/src" && \
        if [ ! -d "/run/${PROJECT_NAME}" ]; then sudo install -d -o "${USER}" -g "${USER}" -m750 "/run/${PROJECT_NAME}/"; fi'

