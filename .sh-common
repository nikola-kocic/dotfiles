# append to the history file, don't overwrite it
shopt -s histappend
HISTFILE=~/.bash_history
HISTCONTROL=erasedups
HISTSIZE=200000
HISTFILESIZE=2000000
alias u="history -n"
export PROMPT_COMMAND="${PROMPT_COMMAND:+${PROMPT_COMMAND};}history -a"

# Set urgent hint on promt
export PROMPT_COMMAND="${PROMPT_COMMAND:+${PROMPT_COMMAND};}echo -ne '\a'"

# Show current command in titlebar
# https://gist.github.com/sgrankin/7882407
trap 'echo -ne "\033]0;${BASH_COMMAND%% *}\007"' DEBUG
function show_name {
    if [[ -n "$BASH_COMMAND" ]]; then
      echo -en "\033]0;"${PWD/#$HOME/\~}"\007"
    fi
}
export PROMPT_COMMAND=${PROMPT_COMMAND:+${PROMPT_COMMAND%%;*( )};}'show_name'


export GIT_EDITOR="vim"
export EDITOR='vim'
export VISUAL='vim'
export MAKEFLAGS=-j5
export PYTHONDONTWRITEBYTECODE=1 # disable creation of pyc files
export PATH="${HOME}/fs/bin:${PATH}"
# Don't show error "Couldn't connect to accessibility bus: Failed to connect to socket..."
export NO_AT_BRIDGE=1

export PAGER=less
#export LESS="-R -i -j4"
#export LESS="-R -j4 -iMSx4 -FX"
export LESS="--RAW-CONTROL-CHARS --jump-target=4 --ignore-case --long-prompt --chop-long-lines --tabs=4"
export LESS_TERMCAP_me=$(printf '\e[0m')
export LESS_TERMCAP_se=$(printf '\e[0m')
export LESS_TERMCAP_ue=$(printf '\e[0m')
export LESS_TERMCAP_mb=$(printf '\e[1;32m')
export LESS_TERMCAP_md=$(printf '\e[1;34m')
export LESS_TERMCAP_us=$(printf '\e[1;32m')
export LESS_TERMCAP_so=$(printf '\e[1;44;1m')

iploc () { curl -s http://ip-api.com/json/"$1"|tr , '\n'|sed 's/[\"{}]//g'; }
installhistory() { expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort; }

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

alias ll='ls --color=auto -la --full-time'
alias startx2="startx -- vt1 -keeptty &> $HOME/.xorg.log 2>&1"
alias ssh='TERM=rxvt-unicode ssh'
alias gl='git log --pretty=oneline --graph --decorate --color'
alias lsd='ls -lahrt --time-style=full-iso'
alias rmpyc="find . -name '*.pyc' -delete"
alias vcp="rsync -ah --progress"
alias srlayout="setxkbmap -option grp:lalt_lshift_toggle -layout usrsl,rs -variant ,yz"
alias tvim="gvim --servername `gvim --serverlist | head -1` --remote-tab"
alias pull-subfolders-git="find . -maxdepth 1 -type d ! -path . -exec sh -c '(cd {} && git pull)' ';'"
alias sync-project-server='git --git-dir /mnt/project/.git ls-files -z src/ | rsync -vz --exclude config.json --files-from=- --from0 /mnt/project/ project-server:~/project/'
alias eclipse="(SWT_GTK3=0 ~/fs/bin/eclipse/eclipse &)"
alias lsvfiogroups="find /sys/kernel/iommu_groups/ -type l"
alias checkreboot="sudo lsof | grep 'DEL.*lib'"

mount_tc() {
    local FILEPATH="${1}"
    local DESTINATION="${2}"
    local CONTAINER_NAME="$(basename "${FILEPATH}")"
    sudo sh -c "cryptsetup --type tcrypt open "${FILEPATH}" "${CONTAINER_NAME}" && mount -o fmask=0177,dmask=0077,uid="$(id --user $(whoami))"  "/dev/mapper/${CONTAINER_NAME}" "${DESTINATION}""
}

mount_tc_ext() {
    local FILEPATH="${1}"
    local DESTINATION="${2}"
    local CONTAINER_NAME="$(basename "${FILEPATH}")"
    sudo sh -c "cryptsetup --type tcrypt open "${FILEPATH}" "${CONTAINER_NAME}" && mount -o nodev,nosuid,grpid "/dev/mapper/${CONTAINER_NAME}" "${DESTINATION}""
}

alias tcmount="mount_tc /mnt/data/project /mnt/common"

alias project='PROJECT_NAME="project" && \
        PROJECTPATH="/mnt/${PROJECT_NAME}" && \
        export PYTHONPATH="${PROJECTPATH}:${PYTHONPATH}" && \
        source ~/dev/virtualenvs/${PROJECT_NAME}/bin/activate && \
        cd "${PROJECTPATH}/src" && \
        if [ ! -d "/run/${PROJECT_NAME}" ]; then sudo install -d -o "${USER}" -g "${USER}" -m750 "/run/${PROJECT_NAME}/"; fi'

